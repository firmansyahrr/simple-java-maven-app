node {
    def mvnImage = 'maven:3.9.2'
    def mvnArgs = '-v /var/jenkins_home/.m2:/root/.m2 --user root --dns 8.8.8.8 --dns 8.8.4.4'
    
    env.MAVEN_OPTS = '-Dmaven.repo.local=/root/.m2/repository'
    
    try {
        stage('Build') {
            docker.image(mvnImage).inside(mvnArgs) {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        
        stage('Test') {
            docker.image(mvnImage).inside(mvnArgs) {
                sh 'mvn test'
            }
        }
        
        stage('Post Test Actions') {
            docker.image(mvnImage).inside(mvnArgs) {
                junit 'target/surefire-reports/*.xml'
            }
        }
        
        stage('Deploy') {
            sshagent(credentials: ['ec2-ssh-key']) {
                sh """
                    ssh -o StrictHostKeyChecking=no ${env.EC2_USER}@${env.EC2_HOST} \
                        'pwd && mkdir -p /home/ubuntu/java-app && ls -la'
                """
            }

            docker.image(mvnImage).inside(mvnArgs) {
                sh './jenkins/scripts/deliver.sh'
                sh 'ls -la'
                sh 'cd target && ls -la'

                sh 'apt-get update && apt-get install -y openssh-client'

                sshagent(credentials: ['ec2-ssh-key']) {
                    sh """
                        scp -r -o StrictHostKeyChecking=no target ${env.EC2_USER}@${env.EC2_HOST}:/home/ubuntu/java-app
                    """

                    sh """
                        ssh -o StrictHostKeyChecking=no ${env.EC2_USER}@${env.EC2_HOST} \
                        'pwd && chmod +x java-app/target/my-app-1.0-SNAPSHOT.jar'
                    """


                }
            }
        }
    } catch (Exception e) {
        echo "Pipeline failed: ${e.getMessage()}"
        currentBuild.result = 'FAILURE'
        throw e
    }
}
